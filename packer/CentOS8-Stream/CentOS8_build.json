{
  "builders": [
    {
      "type": "vsphere-iso",

      "vcenter_server": "{{user `vcenter_server`}}",
      "username": "{{user `vsphere_username`}}",
      "password": "{{user `vsphere_password`}}",
      "insecure_connection": "true",

      "vm_name": "{{user `vm_name`}}",
      "notes": "Built via Packer {{isotime \"2022-02-03 00:00:00\"}}",

      "datacenter": "{{user `datacenter`}}",
      "cluster": "{{user `cluster`}}",
      "resource_pool": "",
      "datastore": "{{user `datastore`}}",
      "folder": "{{user `folder`}}",

      "iso_paths": [
        "{{user `boot_iso`}}"
      ],

      "boot_order": "disk,cdrom",
      "boot_command": [
        "<tab> inst.text inst.ks=cdrom:/dev/sr1:/ks.cfg <enter>"
      ],
      "cd_label": "OEMDRV",
      "cd_files": [
        "./ks.cfg"
      ],
      "boot_wait": "{{user `boot_wait`}}",

      "CPUs": "{{user `numvcpus`}}",
      "RAM": "{{user `memsize`}}",
      "RAM_reserve_all": false,
      
      "storage": [
        {
          "disk_size": "{{user `disk_size`}}",
          "disk_thin_provisioned": true
        }
      ],
      "disk_controller_type": "pvscsi",

      "guest_os_type": "{{user `guest_os_type`}}",

      "network_adapters": [
        {
          "network": "{{user `network`}}",
          "network_card": "vmxnet3"
        }
      ],

      "shutdown_command": "echo 'packer'|sudo -S /sbin/halt -h -p",
      "ssh_password": "{{ user `ssh_password` }}",
      "ssh_port": 22,
      "ssh_username": "{{ user `ssh_username` }}",
      "ssh_timeout": "30m",
        
      "convert_to_template": "true",
      "create_snapshot": "true",
      "remove_cdrom": "true"
    }
  ],
  "provisioners": [
    {
      "execute_command": "echo 'packer'|{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "inline": [
        "dnf -y update",
        "dnf -y install python3",
        "pip3 install --upgrade pip",
        "alternatives --set python /usr/bin/python3",
        "pip3 install ansible"
      ],
      "type": "shell"
    },
    {
      "playbook_file": "scripts/setup.yml",
      "type": "ansible-local"
    },
    {
      "execute_command": "echo 'packer'|{{.Vars}} sudo -S -E bash '{{.Path}}'",
      "scripts": [
        "scripts/cleanup.sh"
      ],
      "type": "shell"
    }
  ]
}

